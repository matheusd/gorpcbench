// Copyright (c) 2025 Matheus Degiovani
// Use of this source code is governed by an ISC
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: structdef.proto

//*
// ffoooo

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoidData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoidData) Reset() {
	*x = VoidData{}
	mi := &file_structdef_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidData) ProtoMessage() {}

func (x *VoidData) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidData.ProtoReflect.Descriptor instead.
func (*VoidData) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{0}
}

type AddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             int64                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B             int64                  `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_structdef_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{1}
}

func (x *AddRequest) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *AddRequest) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

type AddResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Res           int64                  `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResult) Reset() {
	*x = AddResult{}
	mi := &file_structdef_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResult) ProtoMessage() {}

func (x *AddResult) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResult.ProtoReflect.Descriptor instead.
func (*AddResult) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{2}
}

func (x *AddResult) GetRes() int64 {
	if x != nil {
		return x.Res
	}
	return 0
}

type TreeNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Children      []*TreeNode            `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreeNode) Reset() {
	*x = TreeNode{}
	mi := &file_structdef_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNode) ProtoMessage() {}

func (x *TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNode.ProtoReflect.Descriptor instead.
func (*TreeNode) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{3}
}

func (x *TreeNode) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TreeNode) GetChildren() []*TreeNode {
	if x != nil {
		return x.Children
	}
	return nil
}

type MultTreeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mult          int64                  `protobuf:"varint,1,opt,name=mult,proto3" json:"mult,omitempty"`
	Tree          *TreeNode              `protobuf:"bytes,2,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultTreeRequest) Reset() {
	*x = MultTreeRequest{}
	mi := &file_structdef_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultTreeRequest) ProtoMessage() {}

func (x *MultTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultTreeRequest.ProtoReflect.Descriptor instead.
func (*MultTreeRequest) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{4}
}

func (x *MultTreeRequest) GetMult() int64 {
	if x != nil {
		return x.Mult
	}
	return 0
}

func (x *MultTreeRequest) GetTree() *TreeNode {
	if x != nil {
		return x.Tree
	}
	return nil
}

type MultTreeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tree          *TreeNode              `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultTreeResponse) Reset() {
	*x = MultTreeResponse{}
	mi := &file_structdef_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultTreeResponse) ProtoMessage() {}

func (x *MultTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultTreeResponse.ProtoReflect.Descriptor instead.
func (*MultTreeResponse) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{5}
}

func (x *MultTreeResponse) GetTree() *TreeNode {
	if x != nil {
		return x.Tree
	}
	return nil
}

type ToHexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	In            []byte                 `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToHexRequest) Reset() {
	*x = ToHexRequest{}
	mi := &file_structdef_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToHexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToHexRequest) ProtoMessage() {}

func (x *ToHexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToHexRequest.ProtoReflect.Descriptor instead.
func (*ToHexRequest) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{6}
}

func (x *ToHexRequest) GetIn() []byte {
	if x != nil {
		return x.In
	}
	return nil
}

type ToHexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Out           []byte                 `protobuf:"bytes,1,opt,name=out,proto3" json:"out,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToHexResponse) Reset() {
	*x = ToHexResponse{}
	mi := &file_structdef_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToHexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToHexResponse) ProtoMessage() {}

func (x *ToHexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToHexResponse.ProtoReflect.Descriptor instead.
func (*ToHexResponse) Descriptor() ([]byte, []int) {
	return file_structdef_proto_rawDescGZIP(), []int{7}
}

func (x *ToHexResponse) GetOut() []byte {
	if x != nil {
		return x.Out
	}
	return nil
}

var File_structdef_proto protoreflect.FileDescriptor

const file_structdef_proto_rawDesc = "" +
	"\n" +
	"\x0fstructdef.proto\x12\n" +
	"goserbench\"\n" +
	"\n" +
	"\bVoidData\"(\n" +
	"\n" +
	"AddRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x03R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x03R\x01b\"\x1d\n" +
	"\tAddResult\x12\x10\n" +
	"\x03res\x18\x01 \x01(\x03R\x03res\"R\n" +
	"\bTreeNode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\x120\n" +
	"\bchildren\x18\x02 \x03(\v2\x14.goserbench.TreeNodeR\bchildren\"O\n" +
	"\x0fMultTreeRequest\x12\x12\n" +
	"\x04mult\x18\x01 \x01(\x03R\x04mult\x12(\n" +
	"\x04tree\x18\x02 \x01(\v2\x14.goserbench.TreeNodeR\x04tree\"<\n" +
	"\x10MultTreeResponse\x12(\n" +
	"\x04tree\x18\x01 \x01(\v2\x14.goserbench.TreeNodeR\x04tree\"\x1e\n" +
	"\fToHexRequest\x12\x0e\n" +
	"\x02in\x18\x01 \x01(\fR\x02in\"!\n" +
	"\rToHexResponse\x12\x10\n" +
	"\x03out\x18\x01 \x01(\fR\x03out2\xfb\x01\n" +
	"\x03API\x123\n" +
	"\x03Nop\x12\x14.goserbench.VoidData\x1a\x14.goserbench.VoidData\"\x00\x126\n" +
	"\x03Add\x12\x16.goserbench.AddRequest\x1a\x15.goserbench.AddResult\"\x00\x12G\n" +
	"\bMultTree\x12\x1b.goserbench.MultTreeRequest\x1a\x1c.goserbench.MultTreeResponse\"\x00\x12>\n" +
	"\x05ToHex\x12\x18.goserbench.ToHexRequest\x1a\x19.goserbench.ToHexResponse\"\x00B7Z5github.com/matheusd/gorpcbench/internal/rpc/grpc;grpcb\x06proto3"

var (
	file_structdef_proto_rawDescOnce sync.Once
	file_structdef_proto_rawDescData []byte
)

func file_structdef_proto_rawDescGZIP() []byte {
	file_structdef_proto_rawDescOnce.Do(func() {
		file_structdef_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_structdef_proto_rawDesc), len(file_structdef_proto_rawDesc)))
	})
	return file_structdef_proto_rawDescData
}

var file_structdef_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_structdef_proto_goTypes = []any{
	(*VoidData)(nil),         // 0: goserbench.VoidData
	(*AddRequest)(nil),       // 1: goserbench.AddRequest
	(*AddResult)(nil),        // 2: goserbench.AddResult
	(*TreeNode)(nil),         // 3: goserbench.TreeNode
	(*MultTreeRequest)(nil),  // 4: goserbench.MultTreeRequest
	(*MultTreeResponse)(nil), // 5: goserbench.MultTreeResponse
	(*ToHexRequest)(nil),     // 6: goserbench.ToHexRequest
	(*ToHexResponse)(nil),    // 7: goserbench.ToHexResponse
}
var file_structdef_proto_depIdxs = []int32{
	3, // 0: goserbench.TreeNode.children:type_name -> goserbench.TreeNode
	3, // 1: goserbench.MultTreeRequest.tree:type_name -> goserbench.TreeNode
	3, // 2: goserbench.MultTreeResponse.tree:type_name -> goserbench.TreeNode
	0, // 3: goserbench.API.Nop:input_type -> goserbench.VoidData
	1, // 4: goserbench.API.Add:input_type -> goserbench.AddRequest
	4, // 5: goserbench.API.MultTree:input_type -> goserbench.MultTreeRequest
	6, // 6: goserbench.API.ToHex:input_type -> goserbench.ToHexRequest
	0, // 7: goserbench.API.Nop:output_type -> goserbench.VoidData
	2, // 8: goserbench.API.Add:output_type -> goserbench.AddResult
	5, // 9: goserbench.API.MultTree:output_type -> goserbench.MultTreeResponse
	7, // 10: goserbench.API.ToHex:output_type -> goserbench.ToHexResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_structdef_proto_init() }
func file_structdef_proto_init() {
	if File_structdef_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_structdef_proto_rawDesc), len(file_structdef_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_structdef_proto_goTypes,
		DependencyIndexes: file_structdef_proto_depIdxs,
		MessageInfos:      file_structdef_proto_msgTypes,
	}.Build()
	File_structdef_proto = out.File
	file_structdef_proto_goTypes = nil
	file_structdef_proto_depIdxs = nil
}
